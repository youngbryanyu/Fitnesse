// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/* 
THIS FILE IS SAFE TO PUSH. IT CONTAINS A CLIENT-SIDE WEB API KEY, NOT AN API KEY FOR BACKEND USE.

See:
- https://stackoverflow.com/questions/71432691/flutter-should-firebase-options-dart-be-added-to-gitignore
- https://firebase.google.com/docs/projects/api-keys#api-keys-for-firebase-are-different
  - The sign up quota can be set in the auth console.
*/

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyAWgWcYrrhinyqASQgVkp3kw1FAVa3pyDY',
    appId: '1:491996980228:web:b2585daa54b87fbfcfc151',
    messagingSenderId: '491996980228',
    projectId: 'ontrack-dev-4da57',
    authDomain: 'ontrack-dev-4da57.firebaseapp.com',
    storageBucket: 'ontrack-dev-4da57.appspot.com',
    measurementId: 'G-JPYPGXCHG8',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAVqoS-Yc86CzFXonZbCG-LrTC39SPQSo8',
    appId: '1:491996980228:android:cf62adafe8e7b3e2cfc151',
    messagingSenderId: '491996980228',
    projectId: 'ontrack-dev-4da57',
    storageBucket: 'ontrack-dev-4da57.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyDnw5ZBhvZPJGiGdsZkS3sNhyj8J7rqEO8',
    appId: '1:491996980228:ios:00a767376744f47acfc151',
    messagingSenderId: '491996980228',
    projectId: 'ontrack-dev-4da57',
    storageBucket: 'ontrack-dev-4da57.appspot.com',
    iosBundleId: 'com.example.frontend',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyDnw5ZBhvZPJGiGdsZkS3sNhyj8J7rqEO8',
    appId: '1:491996980228:ios:31f7ca3b59614904cfc151',
    messagingSenderId: '491996980228',
    projectId: 'ontrack-dev-4da57',
    storageBucket: 'ontrack-dev-4da57.appspot.com',
    iosBundleId: 'com.example.frontend.RunnerTests',
  );
}
